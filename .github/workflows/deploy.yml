name: CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            # Update package index and install dependencies
            sudo apt-get update -y
            sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common

            # Add Docker's official GPG key
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
            sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"

            # Install Docker
            sudo apt-get update -y
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io

            # Install Docker Compose
            sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose

            # Allow the CI/CD user to run Docker commands without password prompt (modify sudoers file)
            echo "${{ secrets.SERVER_USER }} ALL=(ALL) NOPASSWD: /usr/bin/docker, /usr/local/bin/docker-compose" | sudo tee -a /etc/sudoers

            # Verify installations
            docker --version
            docker-compose --version

            # Kill all processes using ports 80 and 8080
            sudo fuser -k 80/tcp
            sudo fuser -k 8080/tcp

            # Stop all running Docker containers
            sudo docker stop $(sudo docker ps -q)

            # Remove all Docker containers
            sudo docker rm $(sudo docker ps -a -q)

            # Navigate to the project directory, clone or pull the latest changes, and restart the services
            cd /var/www/
            if [ ! -d "fastapi-book-project" ]; then
              git clone https://github.com/Gadoskey/fastapi-book-project.git
            else
              cd fastapi-book-project/
              git pull origin main
            fi

            # Rebuild and start the Docker containers
            sudo docker-compose up -d --build

            # Restart Nginx to apply any changes
            sudo service nginx restart
